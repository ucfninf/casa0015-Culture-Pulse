name: culture_pulse_app
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
on:
  push:                 # This is the condition that the action will run on
    branches: [ main ]  # In this case when you push your code into GitHub
    # tags:
    # - "v*.*.*"          # In this case when you tag your commit with v1.0.0 for example
    
jobs:
  build:
    runs-on: ubuntu-latest  # This is the type of machine we want to run the action on
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3     # Checkout the Repository on the Virtual Machine

      - name: Set up JDK              # Setup JAVA to build the Android APK for us
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: microsoft

      #  Decode keystore File from repository secrets
      #  Keep the keystore file private; donâ€™t check it into public source control!
      
      #- name: Decode KeyStore File (.jks)            
      #  run: echo "${{ secrets.KEYSTORE_JKS_PROD }}" | base64 --decode > android/keystore.jks

      #- name: Decode android/key.properties
      #  run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties

      - name: Install yq
        uses: mikefarah/yq@v4.42.1

      - name: Get pubspec version
        id: get_flutter_app_version
        run: |
          VERSION=$(yq .version | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' pubspec.yaml | head -n 1)
          echo "TAG_VERSION=$VERSION" >> $GITHUB_OUTPUT
  
      - name: Create git tag
        run: |
          git tag "v${{ steps.get_flutter_app_version.outputs.TAG_VERSION }}"

      - name: Install Flutter               # Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'main'

      - name: Get Flutter dependencies      # Get the Libraries and Dependencies
        run: flutter pub get

      - name: Build APK Release             # Build a release
        run: flutter build apk --release

      - name: Build an AppBundle            # App Bundles are useful for Google Play Store
        run: flutter build appbundle --release

      - name: Save APK to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flutter-apk
          path: build/app/outputs/flutter-apk/*.apk

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-appbundle
          path: build/app/outputs/bundle/release/*.aab

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/*.aab,build/app/outputs/flutter-apk/*.apk"
          tag: "v${{ steps.get_flutter_app_version.outputs.TAG_VERSION }}"
          # token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}

publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 1.0.5+1

environment:
  sdk: '>=3.3.0 <4.0.0'

dependencies:
  flutter:
    sdk: flutter

  cupertino_icons: ^1.0.6

  sp_util: 2.0.3
  google_maps_flutter: ^2.6.0
  map_launcher: ^3.1.0
  geolocator: ^10.1.0
  oktoast: ^3.3.1
  flutter_colorpicker: ^1.0.3
  url_launcher: ^6.2.5
  http: ^1.2.1
dev_dependencies:
  flutter_test:
    sdk: flutter

  flutter_lints: ^3.0.0


# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/image/
    - assets/home/

